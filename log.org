Work log
* Week 2 
** Thursday
   - set up local dev for multiline-grep, so don't have to edit it over ssh 
   - recompiled re2 on machine bug with old compiler
   - looked into other local grep tool
   - test other local grep tools ag, pcre, grep -P (300 repos is too small to tell difference, they do take sometime to start up)
   - pulled larger set of repos to test on
   - Wrote code for ggrep frontend
** Friday
   - downloaded and setup 1500 repo index for codesearch
   - wrote regexs for search, including a multiline regex for format "for(A;B;C)"
   - finished codesearch python interface for issuing multiline greps on results from initial codesearch query
   - tests queries using ag and multigrep codesearch
   - looked into generic makefiles again
* Week 3 
** Monday
   - Wrote code to merge index.json files for codesearch (short)
   - Wrote more elaborate regexs to capture structs for linked list, 
   - Downloaded 2000 more repos and (copied previous 1500) total 3500
   - Tested "ag" on some regex with 1500 regex
** Tuesday
   - Run test queries over repository using ag and codesearch
   - Had meeting with bjorn
   - Wrote simple python code for searching all directories
   - investigate how to parallelise the approach to get better performance
** Wednesday
   - Learned and set up tmux
   - tested time taken by ag to search entire repo
   - tested ack command line options
   - wrote parallel version of tool using processes pools (not tested)
   - wrote parrallel version of own ag tool (just about as fast as ag when run with same number of cores i.e 8)
** Thursday
   - Implemented timeout argument to limit length of search 
   - Wrote python code to stop search after a set number of matches
   - Implemented passing of args on commandline with flags, by using argsparse module
** Friday
   - Had meeting with bjorn at end of day 
   - wrote method for searching directory structure for files to grep
   - wrote method to filter out files based on ending type e.i cpp
* Week 4 
** Monday
   - Rewrote/worked entire code base 
   - Fixed argument passing in code
   - research data bases mysql vs sqlite3
   - learn sqlite3 api for python
** Tuesday
   - Had meeting with bjorn
   - Programmered automated database creations using quering of github api
   - created command line interface to tool
** Wednesday
   - Rewrote repository cloner to work directly from database entry or file
   - repository clone has commandline interface
   - add functionality in database builder to start pulling repo are finishing build databasr
   - seperated out repository database class to be used in different scritpt
** Thurday
   - fixed bug with unicode names
   - fixed bug with broken symlinks
   - added database search functionality to mgsearch tool (commandline args)
   - create search func to return names from databse in repositorydb class
   - start testing generic makefiles on repositories
** Friday
   - Worked On testing generic makefiles on set of github repositories (47)
   - Identified other generic makefiles that could work for processing many repositories
   - Look into other build system that could be used cmake, automake, autogenconfig
* Week 5
** Monday
   - Tested many other repositorys (20)
   - Investigated more build systems
   - lunch with bjorn
** Tuesday
   - Wrote script to apply make to all repositories in a directory
   - test on local set of repos
   - investigated problem with make process
** Wednesday
   - Learned more about make 
   - Wrote own generic make for c to better test repositories
   - Tested more local repositories for reasons of failure on trying make
	 - librarys not included,
	 - includes preprocessor directive failed
	 - double main due to tests or multiple projects in a single repo 
** Thursday
   - Cmake setup and testing (does not work well either)
   - 
   - Emailed bjorn he is away on a workshop 
** Friday
   - fixed bug in mgsearch for timeout of process
   - tested on large set of repositorues 1000 downloaded thursday night
* Week 6
** Monday
   - Implemented basic script for running transformation on successful hits of pattern
   -  
** Tuesday
   - alter mgsearch to handle 
** Wednesday
   - Finish editing mgsearch to produce data to be used by transformation tool
   - Complete tranformation code; take desired transformation (i.e clang) and write script to apply it to files in repo (store output .c or cpp in build directory)
   - Complete building of object file using a compiler (store in directory in repo)
** Thursday
** Friday
